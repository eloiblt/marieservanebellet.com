version: '3.3'
services:

  front-service:
    image: "ghcr.io/eloiblt/marieservanebellet-front:latest"
    container_name: front-service
    restart: always
    build:
      context: ../../
      dockerfile: ./front/Dockerfile
    networks:
      - front-network

  api-service:
    image: "ghcr.io/eloiblt/marieservanebellet-api:latest"
    container_name: api-service
    restart: always
    build:
      context: ../../
      dockerfile: ./api/Dockerfile
    volumes:
      - pictures-volume:/pictures
    networks:
      - api-network
    depends_on:
      - db-service

  db-service:
    image: postgres
    container_name: db-service
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=msb
    volumes:
      - db-volume:/var/lib/postgresql/data
    networks:
      - api-network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - api-network

  pictures-service:
    image: nginx
    container_name: pictures-service
    restart: always
    networks:
      - pictures-network
    volumes:
      - pictures-volume:/usr/share/nginx/html

  reverse-proxy:
    image: "ghcr.io/eloiblt/marieservanebellet-reverse-proxy:latest"
    container_name: reverse-proxy
    restart: always
    build:
      context: ../../
      dockerfile: ./docker/prod/reverse-proxy/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt/:/etc/nginx/ssl
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - api-network
      - front-network
      - pictures-network
    depends_on:
      - front-service
      - api-service
      - pictures-service

networks:
  api-network:
    driver: bridge
  front-network:
    driver: bridge
  pictures-network:
    driver: bridge

volumes:
  db-volume:
    external: true
  pictures-volume:
    external: true
