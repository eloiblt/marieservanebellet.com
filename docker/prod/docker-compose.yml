version: '3.3'
services:

  front-service:
    container_name: front-service
    build:
      context: ../../
      dockerfile: ./front/Dockerfile
    networks:
      - front-network

  api-service:
    container_name: api-service
    build:
      context: ../../
      dockerfile: ./api/Dockerfile
    networks:
      - api-network
    depends_on:
      - mongo-service

  mongo-service:
    image: mongo
    container_name: mongo-service
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: marieservanebellet
    volumes:
      - ./../dev/mongo-seeder/:/docker-entrypoint-initdb.d/ # remove prod
      - /home/ubuntu/mongo-volume/:/data/db/
    networks:
      - api-network

  pictures-service:
    container_name: pictures-service
    image: nginx
    networks:
      - pictures-network
    volumes:
      - /home/ubuntu/pictures-volume/:/usr/share/nginx/html

  reverse-proxy:
    container_name: reverse-proxy
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl/conf:/etc/nginx/ssl
      - ./ssl/data:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done &
      nginx -g \"daemon off;\"'"
    networks:
      - api-network
      - front-network
      - pictures-network
      - certbot-network
    depends_on:
      - front-service
      - api-service
      - pictures-service

  certbot:
    container_name: certbot
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./ssl/conf/:/etc/letsencrypt
      - ./ssl/data/:/var/www/certbot
    networks:
      - certbot-network

networks:
  api-network:
    driver: bridge
  front-network:
    driver: bridge
  pictures-network:
    driver: bridge
  certbot-network:
    driver: bridge
